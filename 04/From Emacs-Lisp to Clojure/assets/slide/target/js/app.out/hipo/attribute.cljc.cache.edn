;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name hipo.attribute, :imports nil, :requires {hic hipo.hiccup, hipo.hiccup hipo.hiccup}, :uses nil, :defs {default-set-value! {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 57, :column 7, :end-line 57, :end-column 25, :arglists (quote ([el attr ov nv m]))}, :name hipo.attribute/default-set-value!, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 25, :method-params ([el attr ov nv m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 5, :fn-var true, :arglists (quote ([el attr ov nv m]))}, handler {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 49, :column 7, :end-line 49, :end-column 14, :arglists (quote ([m ns tag attr]))}, :name hipo.attribute/handler, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 14, :method-params ([m ns tag attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 4, :fn-var true, :arglists (quote ([m ns tag attr]))}, set-value! {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([el m ns tag attr ov nv]))}, :name hipo.attribute/set-value!, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 17, :method-params ([el m ns tag attr ov nv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 7, :fn-var true, :arglists (quote ([el m ns tag attr ov nv]))}, set-property-value {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 9, :column 7, :end-line 9, :end-column 25, :arglists (quote ([el k v]))}, :name hipo.attribute/set-property-value, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 25, :method-params ([el k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el k v]))}, property-name->js-property-name {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 7, :column 8, :end-line 7, :end-column 39, :private true, :arglists (quote ([n]))}, :private true, :name hipo.attribute/property-name->js-property-name, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 39, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, default-handler-fns {:name hipo.attribute/default-handler-fns, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 23, :column 1, :end-line 23, :end-column 25, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 23, :column 6, :end-line 23, :end-column 25}}, default-handlers {:name hipo.attribute/default-handlers, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 27, :column 1, :end-line 27, :end-column 22, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 27, :column 6, :end-line 27, :end-column 22}}, target-matches? {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 43, :column 7, :end-line 43, :end-column 22, :arglists (quote ([m ns tag attr]))}, :name hipo.attribute/target-matches?, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 22, :method-params ([m ns tag attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 4, :fn-var true, :arglists (quote ([m ns tag attr]))}, remove-attribute! {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 17, :column 7, :end-line 17, :end-column 24, :arglists (quote ([el k m]))}, :name hipo.attribute/remove-attribute!, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 24, :method-params ([el k m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el k m]))}, matches? {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([expr s]))}, :name hipo.attribute/matches?, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 15, :method-params ([expr s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr s]))}, style-handler {:name hipo.attribute/style-handler, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 5, :column 1, :end-line 5, :end-column 19, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 5, :column 6, :end-line 5, :end-column 19}}, set-attribute! {:protocol-inline nil, :meta {:file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :line 11, :column 7, :end-line 11, :end-column 21, :arglists (quote ([el k v m]))}, :name hipo.attribute/set-attribute!, :variadic false, :file "/Volumes/Data/Copy/dotfiles/.boot/cache/tmp/Users/coldnew/Workspace/from-elisp-to-clojure/slide/assets/slide/kry/ixzxya/js/app.out/hipo/attribute.cljc", :end-column 21, :method-params ([el k v m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el k v m]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:attribute-handlers :fn :else :ns :type :prop :tag :target :attr}, :order [:target :fn :attr :prop :type :ns :tag :else :attribute-handlers]}, :doc nil}